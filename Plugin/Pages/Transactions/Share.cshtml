@page "/plugins/lnbank/tx/{transactionId}"
@inject BTCPayServer.Abstractions.Services.Safe Safe
@model BTCPayServer.Plugins.LNbank.Pages.Transactions.ShareModel

@{
    Layout = "_LayoutSimple";
    ViewData.SetActivePage(LNbankNavPages.Share, Model.Transaction.Description);
}

@section PageHeadContent {
    <partial name="_LayoutLNbankHead" />
}

@section PageFootContent {
    <partial name="_LayoutLNbankFoot" />
}

<main role="main" class="pb-3">
    <div class="row justify-content-center mb-2">
        <div class="col text-center">
            <a asp-controller="UIHome" asp-action="Index" tabindex="-1">
                <img src="~/img/btcpay-logo.svg" alt="BTCPay Server" class="mb-4" height="70" asp-append-version="true"/>
            </a>
            <h1 class="h2 mb-3">LNbank</h1>
        </div>
    </div>
    <div class="row justify-content-center mb-5">
        <div class="col text-center">
            <h2 id="LNbank-TransactionDescription">@ViewData["Title"]</h2>
            @if (Model.Transaction.IsPaid || Model.Transaction.IsSettled)
            {
                <h3 id="LNbank-TransactionSettled" class="text-success">
                    @Helpers.Sats(Model.Transaction.AmountSettled)
                    @Model.Transaction.Status
                </h3>
                <h4 class="h4 text-muted">
                    @if (Model.Transaction.IsSettled)
                    {
                        <span>
                            Paid
                            @Model.Transaction.PaidAt?.ToBrowserDate(ViewsRazor.DateDisplayFormat.Relative)
                        </span>
                    }
                    else
                    {
                        <span>Awaiting confirmation</span>
                    }
                </h4>
            }
            else
            {
                <h3 id="LNbank-TransactionAmount" class="text-@Helpers.TransactionStateClass(Model.Transaction)">
                    @Helpers.Sats(Model.Transaction.Amount)
                    @Model.Transaction.Status
                </h3>
                
                @if (!Model.Transaction.IsCancelled)
                {
                    <h4 class="h4 text-muted">
                        @(Model.Transaction.IsExpired ? "Expired" : "Expires")
                        @Model.Transaction.ExpiresAt.ToBrowserDate(ViewsRazor.DateDisplayFormat.Relative)
                    </h4>
                }
        
                @if (!Model.Transaction.IsExpired && !Model.Transaction.IsCancelled)
                {                                                                                                               
                    <div class="qrcode mt-4" data-clipboard-confirm-element="LNbank-QRText" data-clipboard="@Model.Transaction.PaymentRequest" id="LNbank-QRContainer">
                        @await Component.InvokeAsync("QRCode", new { data = Model.Transaction.PaymentRequest })
                    </div>
                    <div class="mt-2 mb-4">
                        <small id="LNbank-QRText" class="qrtext">Scan the QR code, or tap to copy the address.</small>
                    </div>
                        
                    <script>
                        (function () {
                            window.LNbank.hubs.push({
                                id: 'transaction',
                                handlers: {
                                    'transaction-update': data => {
                                        if (data.transactionId === @Safe.Json(Model.Transaction.TransactionId) {
                                            window.location.reload();
                                        }
                                    }
                                }
                            })
                        })()
                    </script>
                }
            }
        </div>
    </div>
</main>
